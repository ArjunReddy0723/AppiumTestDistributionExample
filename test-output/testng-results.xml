<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="1" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="16919" started-at="2015-12-02T11:23:32Z" finished-at="2015-12-02T11:23:49Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="16919" started-at="2015-12-02T11:23:32Z" finished-at="2015-12-02T11:23:49Z">
      <class name="com.paralle.tests.MultiplyTest">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:[MultiplyTest passed=0 failed=0 skipped=0]]" name="beforeMethod" is-config="true" duration-ms="11871" started-at="2015-12-02T16:53:32Z" finished-at="2015-12-02T16:53:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.paralle.tests.MultiplyTest.multiplyTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="multiplyTest()[pri:0, instance:[MultiplyTest passed=0 failed=0 skipped=0]]" name="multiplyTest" duration-ms="4472" started-at="2015-12-02T16:53:44Z" finished-at="2015-12-02T16:53:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:[MultiplyTest passed=0 failed=0 skipped=0]]" name="afterMethod" is-config="true" duration-ms="570" started-at="2015-12-02T16:53:49Z" finished-at="2015-12-02T16:53:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=multiplyTest on [MultiplyTest passed=0 failed=0 skipped=0] status=SUCCESS method=MultiplyTest.multiplyTest()[pri:0, instance:[MultiplyTest passed=0 failed=0 skipped=0]] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="closeApp()[pri:0, instance:[MultiplyTest passed=0 failed=0 skipped=0]]" name="closeApp" is-config="true" duration-ms="0" started-at="2015-12-02T16:53:49Z" finished-at="2015-12-02T16:53:49Z">
          <exception class="org.openqa.selenium.remote.SessionNotFoundException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '2.47.1', revision: 'unknown', time: '2015-07-30 11:02:44'
System info: host: 'INsaikrisv.local', ip: '10.4.22.218', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.4', java.version: '1.8.0_51'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.SessionNotFoundException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '2.47.1', revision: 'unknown', time: '2015-07-30 11:02:44'
System info: host: 'INsaikrisv.local', ip: '10.4.22.218', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.4', java.version: '1.8.0_51'
Driver info: driver.version: RemoteWebDriver
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:126)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:52)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:568)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:189)
	at org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:459)
	at com.appium.manager.BaseTest.closeApp(BaseTest.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:140)
	at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:220)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at com.appium.manager.ParallelThread.testRunnerTestNg(ParallelThread.java:70)
	at com.appium.manager.ParallelThread$1.run(ParallelThread.java:51)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.SessionNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:[MultiplyTest passed=0 failed=0 skipped=0]]" name="afterSuite" is-config="true" duration-ms="0" started-at="2015-12-02T16:53:49Z" finished-at="2015-12-02T16:53:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.paralle.tests.MultiplyTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
